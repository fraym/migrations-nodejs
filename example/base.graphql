## general definitions
scalar Any
scalar DateTime
scalar File

input ExpiresAfter {
    years: Int
    months: Int
    weeks: Int
    days: Int
    hours: Int
    minutes: Int
    seconds: Int
}

input WebhookParameter {
    key: String!
    value: String
}

directive @expires(after: ExpiresAfter, condition: String) on OBJECT
directive @permission(
    read: [Permission!]
    update: [Permission!]
    create: [Permission!]
    delete: [Permission!]
    all: [Permission!]
) on OBJECT | FIELD_DEFINITION
directive @renamed(prev: [String!]!) on OBJECT | FIELD_DEFINITION
directive @unique(fields: [String!], name: String) repeatable on OBJECT | FIELD_DEFINITION
directive @identifier on FIELD_DEFINITION
directive @createdAt on FIELD_DEFINITION
directive @changedAt on FIELD_DEFINITION
directive @index on FIELD_DEFINITION
directive @gdpr(default: Any, condition: String) on FIELD_DEFINITION
directive @filterFromJwtData(key: String!) on FIELD_DEFINITION
directive @validate(tags: [String!]!) repeatable on FIELD_DEFINITION
directive @default(value: Any!) on FIELD_DEFINITION
directive @webhook(
    url: String!
    method: String!
    path: [WebhookParameter!]
    query: [WebhookParameter!]
    header: [WebhookParameter!]
    body: [WebhookParameter!]
    events: [String!]
    topics: [String!]
    condition: String
) repeatable on OBJECT | FIELD_DEFINITION
directive @aggregateEvents on FIELD_DEFINITION
directive @from(
    events: [String!]
    topics: [String!]
    condition: String
    value: String
) repeatable on FIELD_DEFINITION
directive @uuidV4(generate: Boolean) on FIELD_DEFINITION
directive @fromJwtData(key: String!) on FIELD_DEFINITION

## projections only
scalar EventEnvelope

input EventSelector {
    topic: String!
    eventTypes: [String!]
}

input IdentifyByOptions {
    attributes: [String!]
    payload: [String!]
}

input Filter {
    fields: [FieldFilter!]
    and: [Filter!]
    or: [Filter!]
}

input FieldFilter {
    projectionField: String!
    eventField: String!
    type: String!
    operation: String!
}

directive @upsertOn(
    on: EventSelector!
    identifyBy: IdentifyByOptions
    filterBy: Filter
) repeatable on OBJECT
directive @dangerouslyUpsertOn(
    on: EventSelector!
    identifyBy: IdentifyByOptions
    filterBy: Filter
) repeatable on OBJECT
directive @removeOn(
    on: EventSelector!
    identifyBy: IdentifyByOptions
    filterBy: Filter
) repeatable on OBJECT
directive @dangerouslyRemoveOn(
    on: EventSelector!
    identifyBy: IdentifyByOptions
    filterBy: Filter
) repeatable on OBJECT
directive @global on OBJECT

## crud only
directive @crudType on OBJECT
directive @readonly on FIELD_DEFINITION
directive @cloneField(field: String!) on FIELD_DEFINITION
